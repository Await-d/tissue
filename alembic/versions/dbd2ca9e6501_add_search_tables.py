"""add_search_tables

Revision ID: dbd2ca9e6501
Revises: 20250917_add_site_management_tables
Create Date: 2025-09-17 14:30:16.687720

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dbd2ca9e6501'
down_revision: Union[str, None] = '20250917_add_site_management_tables'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('download_filter_settings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('min_file_size_mb', sa.Integer(), nullable=False, comment='最小文件大小(MB)'),
    sa.Column('max_file_size_mb', sa.Integer(), nullable=True, comment='最大文件大小(MB), null表示无限制'),
    sa.Column('allowed_extensions', sa.Text(), nullable=True, comment='允许的文件扩展名，JSON格式'),
    sa.Column('blocked_extensions', sa.Text(), nullable=True, comment='禁止的文件扩展名，JSON格式'),
    sa.Column('min_seed_count', sa.Integer(), nullable=True, comment='最小种子数'),
    sa.Column('max_total_size_gb', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='种子总大小限制(GB)'),
    sa.Column('enable_smart_filter', sa.Boolean(), nullable=False, comment='启用智能过滤'),
    sa.Column('skip_sample_files', sa.Boolean(), nullable=False, comment='跳过样本文件'),
    sa.Column('skip_subtitle_only', sa.Boolean(), nullable=False, comment='跳过仅字幕文件'),
    sa.Column('media_files_only', sa.Boolean(), nullable=False, comment='只保留媒体文件(视频+字幕)'),
    sa.Column('include_subtitles', sa.Boolean(), nullable=False, comment='包含字幕文件'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='更新时间'),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hot_searches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('query', sa.String(length=255), nullable=False, comment='搜索关键词'),
    sa.Column('search_count', sa.Integer(), nullable=True, comment='总搜索次数'),
    sa.Column('daily_count', sa.Integer(), nullable=True, comment='今日搜索次数'),
    sa.Column('weekly_count', sa.Integer(), nullable=True, comment='本周搜索次数'),
    sa.Column('monthly_count', sa.Integer(), nullable=True, comment='本月搜索次数'),
    sa.Column('trend_score', sa.Float(), nullable=True, comment='趋势得分'),
    sa.Column('last_search_at', sa.DateTime(), nullable=True, comment='最后搜索时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('query')
    )
    op.create_index('idx_hot_daily_count', 'hot_searches', ['daily_count'], unique=False)
    op.create_index('idx_hot_last_search', 'hot_searches', ['last_search_at'], unique=False)
    op.create_index('idx_hot_monthly_count', 'hot_searches', ['monthly_count'], unique=False)
    op.create_index('idx_hot_search_count', 'hot_searches', ['search_count'], unique=False)
    op.create_index('idx_hot_trend_score', 'hot_searches', ['trend_score'], unique=False)
    op.create_index('idx_hot_weekly_count', 'hot_searches', ['weekly_count'], unique=False)
    op.create_table('search_cache',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cache_key', sa.String(length=255), nullable=False, comment='缓存键'),
    sa.Column('query', sa.String(length=255), nullable=False, comment='搜索关键词'),
    sa.Column('search_type', sa.String(length=50), nullable=True, comment='搜索类型'),
    sa.Column('sources', sa.String(length=255), nullable=True, comment='数据源'),
    sa.Column('result_data', sa.Text(), nullable=True, comment='搜索结果数据(JSON)'),
    sa.Column('result_count', sa.Integer(), nullable=True, comment='结果数量'),
    sa.Column('hit_count', sa.Integer(), nullable=True, comment='缓存命中次数'),
    sa.Column('expires_at', sa.DateTime(), nullable=False, comment='过期时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cache_key')
    )
    op.create_index('idx_cache_created', 'search_cache', ['created_at'], unique=False)
    op.create_index('idx_cache_expires', 'search_cache', ['expires_at'], unique=False)
    op.create_index('idx_cache_query', 'search_cache', ['query'], unique=False)
    op.create_table('search_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('query', sa.String(length=255), nullable=False, comment='搜索关键词'),
    sa.Column('search_type', sa.String(length=50), nullable=True, comment='搜索类型: all, local, web, actor, num'),
    sa.Column('result_count', sa.Integer(), nullable=True, comment='搜索结果数量'),
    sa.Column('user_ip', sa.String(length=45), nullable=True, comment='用户IP地址'),
    sa.Column('user_agent', sa.Text(), nullable=True, comment='用户代理信息'),
    sa.Column('response_time', sa.Float(), nullable=True, comment='响应时间(秒)'),
    sa.Column('sources', sa.String(length=255), nullable=True, comment='搜索数据源，逗号分隔'),
    sa.Column('filters_applied', sa.Text(), nullable=True, comment='应用的过滤条件(JSON)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_search_created_at', 'search_history', ['created_at'], unique=False)
    op.create_index('idx_search_query', 'search_history', ['query'], unique=False)
    op.create_index('idx_search_query_type', 'search_history', ['query', 'search_type'], unique=False)
    op.create_index('idx_search_type', 'search_history', ['search_type'], unique=False)
    op.create_table('search_statistics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False, comment='统计日期'),
    sa.Column('query', sa.String(length=255), nullable=False, comment='搜索关键词'),
    sa.Column('search_count', sa.Integer(), nullable=True, comment='搜索次数'),
    sa.Column('unique_users', sa.Integer(), nullable=True, comment='唯一用户数'),
    sa.Column('avg_response_time', sa.Float(), nullable=True, comment='平均响应时间'),
    sa.Column('success_rate', sa.Float(), nullable=True, comment='成功率'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_stats_count', 'search_statistics', ['search_count'], unique=False)
    op.create_index('idx_stats_date', 'search_statistics', ['date'], unique=False)
    op.create_index('idx_stats_date_query', 'search_statistics', ['date', 'query'], unique=True)
    op.create_index('idx_stats_query', 'search_statistics', ['query'], unique=False)
    op.create_table('search_suggestions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('query', sa.String(length=255), nullable=False, comment='原始搜索词'),
    sa.Column('suggestion', sa.String(length=255), nullable=False, comment='建议搜索词'),
    sa.Column('suggestion_type', sa.String(length=50), nullable=True, comment='建议类型: actor, num, title, tag'),
    sa.Column('priority', sa.Integer(), nullable=True, comment='优先级，数字越大优先级越高'),
    sa.Column('click_count', sa.Integer(), nullable=True, comment='点击次数'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_suggestion_active', 'search_suggestions', ['is_active'], unique=False)
    op.create_index('idx_suggestion_priority', 'search_suggestions', ['priority'], unique=False)
    op.create_index('idx_suggestion_query', 'search_suggestions', ['query'], unique=False)
    op.create_index('idx_suggestion_type', 'search_suggestions', ['suggestion_type'], unique=False)
    op.add_column('actor_subscribe', sa.Column('min_rating', sa.DECIMAL(precision=3, scale=1), nullable=True, comment='最低评分要求'))
    op.add_column('actor_subscribe', sa.Column('min_comments', sa.Integer(), nullable=True, comment='最低评论数要求'))
    op.drop_index('idx_auto_download_rules_enabled', table_name='auto_download_rules')
    op.drop_index('idx_auto_download_subscriptions_num', table_name='auto_download_subscriptions')
    op.drop_index('idx_auto_download_subscriptions_rule_id', table_name='auto_download_subscriptions')
    op.drop_index('idx_auto_download_subscriptions_status', table_name='auto_download_subscriptions')
    op.drop_index('ix_site_error_logs_error_type', table_name='site_error_logs')
    op.drop_index('ix_site_error_logs_occurred_at', table_name='site_error_logs')
    op.drop_index('ix_site_error_logs_site_id', table_name='site_error_logs')
    op.drop_constraint(None, 'site_error_logs', type_='foreignkey')
    op.create_foreign_key(None, 'site_error_logs', 'sites', ['site_id'], ['id'])
    op.drop_index('ix_site_failover_rules_name', table_name='site_failover_rules')
    op.drop_index('ix_site_health_checks_checked_at', table_name='site_health_checks')
    op.drop_index('ix_site_health_checks_site_id', table_name='site_health_checks')
    op.drop_constraint(None, 'site_health_checks', type_='foreignkey')
    op.create_foreign_key(None, 'site_health_checks', 'sites', ['site_id'], ['id'])
    op.drop_index('ix_site_load_balancers_name', table_name='site_load_balancers')
    op.drop_index('ix_site_statistics_site_id', table_name='site_statistics')
    op.drop_constraint(None, 'site_statistics', type_='foreignkey')
    op.create_foreign_key(None, 'site_statistics', 'sites', ['site_id'], ['id'])
    op.add_column('torrent', sa.Column('is_hd', sa.Boolean(), nullable=False))
    op.alter_column('torrent', 'hash',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('torrent', 'hash',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('torrent', 'is_hd')
    op.drop_constraint(None, 'site_statistics', type_='foreignkey')
    op.create_foreign_key(None, 'site_statistics', 'sites', ['site_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_site_statistics_site_id', 'site_statistics', ['site_id'], unique=False)
    op.create_index('ix_site_load_balancers_name', 'site_load_balancers', ['name'], unique=False)
    op.drop_constraint(None, 'site_health_checks', type_='foreignkey')
    op.create_foreign_key(None, 'site_health_checks', 'sites', ['site_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_site_health_checks_site_id', 'site_health_checks', ['site_id'], unique=False)
    op.create_index('ix_site_health_checks_checked_at', 'site_health_checks', ['checked_at'], unique=False)
    op.create_index('ix_site_failover_rules_name', 'site_failover_rules', ['name'], unique=False)
    op.drop_constraint(None, 'site_error_logs', type_='foreignkey')
    op.create_foreign_key(None, 'site_error_logs', 'sites', ['site_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_site_error_logs_site_id', 'site_error_logs', ['site_id'], unique=False)
    op.create_index('ix_site_error_logs_occurred_at', 'site_error_logs', ['occurred_at'], unique=False)
    op.create_index('ix_site_error_logs_error_type', 'site_error_logs', ['error_type'], unique=False)
    op.create_index('idx_auto_download_subscriptions_status', 'auto_download_subscriptions', ['status'], unique=False)
    op.create_index('idx_auto_download_subscriptions_rule_id', 'auto_download_subscriptions', ['rule_id'], unique=False)
    op.create_index('idx_auto_download_subscriptions_num', 'auto_download_subscriptions', ['num'], unique=False)
    op.create_index('idx_auto_download_rules_enabled', 'auto_download_rules', ['is_enabled'], unique=False)
    op.drop_column('actor_subscribe', 'min_comments')
    op.drop_column('actor_subscribe', 'min_rating')
    op.drop_index('idx_suggestion_type', table_name='search_suggestions')
    op.drop_index('idx_suggestion_query', table_name='search_suggestions')
    op.drop_index('idx_suggestion_priority', table_name='search_suggestions')
    op.drop_index('idx_suggestion_active', table_name='search_suggestions')
    op.drop_table('search_suggestions')
    op.drop_index('idx_stats_query', table_name='search_statistics')
    op.drop_index('idx_stats_date_query', table_name='search_statistics')
    op.drop_index('idx_stats_date', table_name='search_statistics')
    op.drop_index('idx_stats_count', table_name='search_statistics')
    op.drop_table('search_statistics')
    op.drop_index('idx_search_type', table_name='search_history')
    op.drop_index('idx_search_query_type', table_name='search_history')
    op.drop_index('idx_search_query', table_name='search_history')
    op.drop_index('idx_search_created_at', table_name='search_history')
    op.drop_table('search_history')
    op.drop_index('idx_cache_query', table_name='search_cache')
    op.drop_index('idx_cache_expires', table_name='search_cache')
    op.drop_index('idx_cache_created', table_name='search_cache')
    op.drop_table('search_cache')
    op.drop_index('idx_hot_weekly_count', table_name='hot_searches')
    op.drop_index('idx_hot_trend_score', table_name='hot_searches')
    op.drop_index('idx_hot_search_count', table_name='hot_searches')
    op.drop_index('idx_hot_monthly_count', table_name='hot_searches')
    op.drop_index('idx_hot_last_search', table_name='hot_searches')
    op.drop_index('idx_hot_daily_count', table_name='hot_searches')
    op.drop_table('hot_searches')
    op.drop_table('download_filter_settings')
    # ### end Alembic commands ###
